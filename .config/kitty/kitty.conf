font_family      Monolisa Nerd Font Mono
bold_font        auto
italic_font      auto
bold_italic_font auto

#: You can specify different fonts for the bold/italic/bold-italic
#: variants. To get a full list of supported fonts use the `kitty
#: +list-fonts` command. By default they are derived automatically, by
#: the OSes font system. When bold_font or bold_italic_font is set to
#: auto on macOS, the priority of bold fonts is semi-bold, bold,
#: heavy. Setting them manually is useful for font families that have
#: many weight variants like Book, Medium, Thick, etc. For example::

#:     font_family      Operator Mono Book
#:     bold_font        Operator Mono Medium
#:     italic_font      Operator Mono Book Italic
#:     bold_italic_font Operator Mono Medium Italic

font_size 16.0

cursor_shape block

copy_on_select yes

tab_title_template "{index}: {fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
# active_border_color #9ccfd8
window_margin_width 0

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only can be used to only hide the titlebar.
#: Whether this works and exactly what effect it has depends on the
#: window manager/operating system. Note that the effects of changing
#: this option when reloading config are undefined.
hide_window_decorations no

#: The tab bar style, can be one of:

#: fade
#:     Each tab's edges fade into the background color. (See also tab_fade)
#: slant
#:     Tabs look like the tabs in a physical file.
#: separator
#:     Tabs are separated by a configurable separator. (See also
#:     tab_separator)
#: powerline
#:     Tabs are shown as a continuous line with "fancy" separators.
#:     (See also tab_powerline_style)
#: custom
#:     A user-supplied Python function called draw_tab is loaded from the file
#:     tab_bar.py in the kitty config directory. For examples of how to
#:     write such a function, see the functions named draw_tab_with_* in
#:     kitty's source code: kitty/tab_bar.py. See also
#:     this discussion <https://github.com/kovidgoyal/kitty/discussions/4447>
#:     for examples from kitty users.
#: hidden
#:     The tab bar is hidden. If you use this, you might want to create
#:     a mapping for the select_tab action which presents you with a list of
#:     tabs and allows for easy switching to a tab.
tab_bar_style powerline

#: The minimum number of tabs that must exist before the tab bar is
#: shown.
tab_bar_min_tabs 1

background_opacity 1
# background_blur 30

#: Enable shell integration on supported shells. This enables features
#: such as jumping to previous prompts, browsing the output of the
#: previous command in a pager, etc. on supported shells. Set to
#: disabled to turn off shell integration, completely. It is also
#: possible to disable individual features, set to a space separated
#: list of these values: no-rc, no-cursor, no-title, no-cwd, no-
#: prompt-mark, no-complete. See Shell integration
#: <https://sw.kovidgoyal.net/kitty/shell-integration/> for details.
# shell_integration enabled no-cursor
shell_integration enabled

#: The color of the kitty window's titlebar on macOS. A value of
#: system means to use the default system color, light or dark can
#: also be used to set it explicitly. A value of background means to
#: use the background color of the currently active window and finally
#: you can use an arbitrary color, such as #12af59 or red. WARNING:
#: This option works by using a hack when arbitrary color (or
#: background) is configured, as there is no proper Cocoa API for it.
#: It sets the background color of the entire window and makes the
#: titlebar transparent. As such it is incompatible with
#: background_opacity. If you want to use both, you are probably
#: better off just hiding the titlebar with hide_window_decorations.
macos_titlebar_color dark

#: Control where the window title is displayed on macOS. A value of
#: window will show the title of the currently active window at the
#: top of the macOS window. A value of menubar will show the title of
#: the currently active window in the macOS global menu bar, making
#: use of otherwise wasted space. A value of all will show the title
#: in both places, and none hides the title. See
#: macos_menubar_title_max_length for how to control the length of the
#: title in the menu bar.
macos_show_window_title_in window

enabled_layouts splits

map --new-mode leader --on-unknown end --on-action end ctrl+a

map --mode leader n next_tab
map --mode leader p previous_tab
map --mode leader c new_tab_with_cwd
map --mode leader t set_tab_title
map --mode leader x close_tab

map --mode leader h neighboring_window left
map --mode leader l neighboring_window right
map --mode leader j neighboring_window down
map --mode leader k neighboring_window up

map --mode leader | launch --cwd=current --location=vsplit
map --mode leader - launch --cwd=current --location=hsplit

map --mode leader 1 goto_tab 1
map --mode leader 2 goto_tab 2
map --mode leader 3 goto_tab 3
map --mode leader 4 goto_tab 4
map --mode leader 5 goto_tab 5
map --mode leader 6 goto_tab 6
map --mode leader 7 goto_tab 7
map --mode leader 8 goto_tab 8
map --mode leader 9 goto_tab 9
map --mode leader 10 goto_tab 10

map --mode leader / show_scrollback

map --new-mode resize --on-unknown end --mode leader r

map --mode resize j resize_window shorter
map --mode resize k resize_window taller
map --mode resize h resize_window narrower
map --mode resize l resize_window wider

map --mode resize esc pop_keyboard_mode
map --mode resize enter pop_keyboard_mode

map --new-mode move --on-unknown end --mode leader m

map --mode move h move_tab_backward
map --mode move l move_tab_forward

map --mode move enter pop_keyboard_mode
map --mode move esc pop_keyboard_mode


# BEGIN_KITTY_THEME
# Tokyo Night Day
include current-theme.conf
# END_KITTY_THEME
